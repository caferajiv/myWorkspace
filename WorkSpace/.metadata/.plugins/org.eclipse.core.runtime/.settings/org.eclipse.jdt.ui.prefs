content_assist_category_order=org.eclipse.jdt.ui.templateProposalCategory\:0\u0000org.eclipse.jdt.ui.swtProposalCategory\:1\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\:65537\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\:3\u0000org.eclipse.jdt.ui.textProposalCategory\:65539\u0000org.eclipse.jdt.ui.javaAllProposalCategory\:5\u0000org.eclipse.jdt.ui.defaultProposalCategory\:6\u0000org.eclipse.jpt.jaxb.ui.jaxbCompletionProposals\:7\u0000org.eclipse.jpt.jpa.ui.jpaProposalCategory\:8\u0000org.eclipse.jst.ws.jaxws.ui.jaxwsProposalComputer\:9\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\:10\u0000org.eclipse.pde.api.tools.ui.apitools_proposal_category\:11\u0000
content_assist_disabled_computers=org.eclipse.jdt.ui.textProposalCategory\u0000org.eclipse.recommenders.calls.rcp.proposalCategory.templates\u0000org.eclipse.mylyn.java.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaAllProposalCategory\u0000org.eclipse.jdt.ui.javaNoTypeProposalCategory\u0000org.eclipse.jdt.ui.javaTypeProposalCategory\u0000org.eclipse.recommenders.chain.rcp.proposalCategory.chain\u0000
content_assist_lru_history=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><history maxLHS\="100" maxRHS\="10"><lhs name\="java.util.concurrent.locks.ReadWriteLock"><rhs name\="java.util.concurrent.locks.ReentrantReadWriteLock"/></lhs><lhs name\="java.util.concurrent.locks.ReentrantReadWriteLock"><rhs name\="java.util.concurrent.locks.ReentrantReadWriteLock"/></lhs><lhs name\="java.util.concurrent.Callable"><rhs name\="com.rajiv.loadcontrol.task.InterruptableTaskWrapper"/><rhs name\="com.rajiv.loadcontrol.Test$MyTask"/></lhs><lhs name\="com.rajiv.loadcontrol.observers.IResourceOverloadObserver"><rhs name\="com.rajiv.loadcontrol.task.InterruptableTaskWrapper"/><rhs name\="com.rajiv.loadcontrol.observers.impl.MemoryResourceObserverImpl"/></lhs><lhs name\="com.rajiv.loadcontrol.observers.IResourceObserver"><rhs name\="com.rajiv.loadcontrol.task.InterruptableTaskWrapper"/><rhs name\="com.rajiv.loadcontrol.LoadController"/><rhs name\="com.rajiv.loadcontrol.observers.impl.MemoryResourceObserverImpl"/></lhs><lhs name\="com.rajiv.loadcontrol.task.InterruptableTaskWrapper"><rhs name\="com.rajiv.loadcontrol.task.InterruptableTaskWrapper"/></lhs><lhs name\="com.rajiv.loadcontrol.task.AbstractInterruptableTask"><rhs name\="com.rajiv.loadcontrol.Test$MyTask"/></lhs><lhs name\="com.rajiv.loadcontrol.Test$MyTask"><rhs name\="com.rajiv.loadcontrol.Test$MyTask"/></lhs><lhs name\="com.rajiv.loadcontrol.observers.ITaskStatusObserver"><rhs name\="com.rajiv.loadcontrol.LoadController"/></lhs><lhs name\="com.rajiv.loadcontrol.observers.IResourceRecoveryObserver"><rhs name\="com.rajiv.loadcontrol.LoadController"/></lhs><lhs name\="com.rajiv.loadcontrol.ResourceMonitor"><rhs name\="com.rajiv.loadcontrol.ResourceMonitor"/></lhs><lhs name\="java.lang.Exception"><rhs name\="java.lang.InterruptedException"/></lhs><lhs name\="java.lang.Throwable"><rhs name\="java.lang.InterruptedException"/></lhs><lhs name\="java.lang.InterruptedException"><rhs name\="java.lang.InterruptedException"/></lhs><lhs name\="java.io.Reader"><rhs name\="java.io.InputStreamReader"/><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="java.lang.Readable"><rhs name\="java.io.InputStreamReader"/><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="java.io.Closeable"><rhs name\="java.io.InputStreamReader"/><rhs name\="java.io.FileInputStream"/><rhs name\="java.io.BufferedOutputStream"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.BufferedInputStream"/><rhs name\="java.io.ObjectOutputStream"/><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.BufferedReader"><rhs name\="java.io.BufferedReader"/></lhs><lhs name\="com.rajiv.loadcontrol.observers.impl.MemoryResourceObserverImpl"><rhs name\="com.rajiv.loadcontrol.observers.impl.MemoryResourceObserverImpl"/></lhs><lhs name\="java.util.concurrent.Future"><rhs name\="com.rajiv.loadcontrol.task.ComparableFutureTask"/><rhs name\="ocp.concurrency.ConcurrencyTests$MyRecursiveAction"/><rhs name\="ocp.concurrency.ConcurrencyTests$MyRecursiveTask"/></lhs><lhs name\="java.util.concurrent.RunnableFuture"><rhs name\="com.rajiv.loadcontrol.task.ComparableFutureTask"/></lhs><lhs name\="com.data.list.LinkedList"><rhs name\="com.data.list.LinkedList"/></lhs><lhs name\="node.TreeNode"><rhs name\="node.TreeNode"/></lhs><lhs name\="java.util.Vector"><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.RandomAccess"><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/></lhs><lhs name\="java.lang.Cloneable"><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.HashMap"/><rhs name\="java.util.HashSet"/><rhs name\="test.cloneable.CloneableTest"/></lhs><lhs name\="java.util.AbstractList"><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/></lhs><lhs name\="java.util.AbstractCollection"><rhs name\="java.util.ArrayList"/><rhs name\="java.util.Stack"/><rhs name\="java.util.PriorityQueue"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.Stack"><rhs name\="java.util.Stack"/></lhs><lhs name\="node.TrieNode"><rhs name\="node.TrieNode"/></lhs><lhs name\="java.util.ArrayList"><rhs name\="java.util.ArrayList"/></lhs><lhs name\="test.DrowningVillage$Point"><rhs name\="test.DrowningVillage$Point"/></lhs><lhs name\="java.util.Queue"><rhs name\="java.util.concurrent.LinkedBlockingQueue"/><rhs name\="java.util.LinkedList"/><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="test.TreeConstruction$BinaryTreeNode"><rhs name\="test.TreeConstruction$BinaryTreeNode"/></lhs><lhs name\="evenodd.NumberPrinter"><rhs name\="evenodd.NumberPrinter"/></lhs><lhs name\="prodcon.Operator"><rhs name\="prodcon.Operator"/></lhs><lhs name\="java.util.concurrent.AbstractExecutorService"><rhs name\="com.loadcontrol.MyThreadPoolExecutor"/><rhs name\="java.util.concurrent.ForkJoinPool"/></lhs><lhs name\="java.util.concurrent.ExecutorService"><rhs name\="com.loadcontrol.MyThreadPoolExecutor"/><rhs name\="java.util.concurrent.ForkJoinPool"/></lhs><lhs name\="java.util.concurrent.Executor"><rhs name\="com.loadcontrol.MyThreadPoolExecutor"/><rhs name\="java.util.concurrent.ForkJoinPool"/></lhs><lhs name\="java.util.concurrent.ThreadPoolExecutor"><rhs name\="com.loadcontrol.MyThreadPoolExecutor"/></lhs><lhs name\="threads.diningphilosophers.Philosopher"><rhs name\="threads.diningphilosophers.Philosopher"/></lhs><lhs name\="tree.BinaryTree"><rhs name\="tree.BinaryTree"/></lhs><lhs name\="com.movie.MovieCatalog"><rhs name\="com.movie.MovieCatalog"/></lhs><lhs name\="java.lang.CharSequence"><rhs name\="java.lang.String"/><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.AbstractStringBuilder"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.lang.Appendable"><rhs name\="java.lang.StringBuilder"/></lhs><lhs name\="java.io.InputStream"><rhs name\="java.io.FileInputStream"/><rhs name\="java.io.BufferedInputStream"/></lhs><lhs name\="java.lang.AutoCloseable"><rhs name\="java.io.InputStreamReader"/><rhs name\="java.io.FileInputStream"/><rhs name\="java.io.BufferedOutputStream"/><rhs name\="java.io.BufferedReader"/><rhs name\="java.io.BufferedInputStream"/><rhs name\="java.io.ObjectOutputStream"/><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.FileInputStream"><rhs name\="java.io.FileInputStream"/></lhs><lhs name\="java.io.FilterInputStream"><rhs name\="java.io.BufferedInputStream"/></lhs><lhs name\="java.io.BufferedInputStream"><rhs name\="java.io.BufferedInputStream"/></lhs><lhs name\="sun.misc.Queue"><rhs name\="sun.misc.Queue"/></lhs><lhs name\="com.data.list.DoubleLinkedList"><rhs name\="com.data.list.DoubleLinkedList"/></lhs><lhs name\="com.data.node.DNode"><rhs name\="com.data.node.DNode"/></lhs><lhs name\="java.lang.Number"><rhs name\="java.math.BigInteger"/></lhs><lhs name\="java.math.BigInteger"><rhs name\="java.math.BigInteger"/></lhs><lhs name\="java.util.AbstractMap"><rhs name\="java.util.HashMap"/><rhs name\="java.util.concurrent.ConcurrentHashMap"/></lhs><lhs name\="java.util.HashMap"><rhs name\="java.util.HashMap"/></lhs><lhs name\="cracking.treegraph.SimpleTrie$TrieNode"><rhs name\="cracking.treegraph.SimpleTrie$TrieNode"/></lhs><lhs name\="cracking.treegraph.SimpleTrie"><rhs name\="cracking.treegraph.SimpleTrie"/></lhs><lhs name\="hacker.algo.graph.GraphBFS$Node"><rhs name\="hacker.algo.graph.GraphBFS$Node"/></lhs><lhs name\="hacker.algo.graph.GraphBFS$Graph$Node"><rhs name\="hacker.algo.graph.GraphBFS$Graph$Node"/></lhs><lhs name\="java.util.AbstractQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="java.util.PriorityQueue"><rhs name\="java.util.PriorityQueue"/></lhs><lhs name\="hacker.crackingcodinginterview.TrieSearch"><rhs name\="hacker.crackingcodinginterview.TrieSearch"/></lhs><lhs name\="java.nio.file.OpenOption"><rhs name\="java.nio.file.LinkOption"/></lhs><lhs name\="java.nio.file.CopyOption"><rhs name\="java.nio.file.StandardCopyOption"/><rhs name\="java.nio.file.LinkOption"/></lhs><lhs name\="java.lang.Enum"><rhs name\="java.nio.file.LinkOption"/><rhs name\="java.nio.file.FileVisitOption"/></lhs><lhs name\="java.time.temporal.Temporal"><rhs name\="java.time.Instant"/></lhs><lhs name\="java.time.temporal.TemporalAccessor"><rhs name\="java.time.Instant"/></lhs><lhs name\="java.time.temporal.TemporalAdjuster"><rhs name\="java.time.Instant"/></lhs><lhs name\="java.io.OutputStream"><rhs name\="java.io.BufferedOutputStream"/><rhs name\="java.io.ObjectOutputStream"/><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.Flushable"><rhs name\="java.io.BufferedOutputStream"/><rhs name\="java.io.ObjectOutputStream"/><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.FileOutputStream"><rhs name\="java.io.FileOutputStream"/></lhs><lhs name\="java.io.FilterOutputStream"><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="java.io.BufferedOutputStream"><rhs name\="java.io.BufferedOutputStream"/></lhs><lhs name\="ocp.io.IOTests$SerializableClass"><rhs name\="ocp.io.IOTests$SerializableClass"/></lhs><lhs name\="java.io.ObjectOutput"><rhs name\="java.io.ObjectOutputStream"/></lhs><lhs name\="java.io.DataOutput"><rhs name\="java.io.ObjectOutputStream"/></lhs><lhs name\="java.io.ObjectStreamConstants"><rhs name\="java.io.ObjectOutputStream"/></lhs><lhs name\="java.io.ObjectOutputStream"><rhs name\="java.io.ObjectOutputStream"/></lhs><lhs name\="java.util.concurrent.CyclicBarrier"><rhs name\="java.util.concurrent.CyclicBarrier"/></lhs><lhs name\="java.util.concurrent.ForkJoinPool"><rhs name\="java.util.concurrent.ForkJoinPool"/></lhs><lhs name\="java.util.concurrent.ForkJoinTask"><rhs name\="ocp.concurrency.ConcurrencyTests$MyRecursiveAction"/><rhs name\="ocp.concurrency.ConcurrencyTests$MyRecursiveTask"/></lhs><lhs name\="java.util.concurrent.RecursiveTask"><rhs name\="ocp.concurrency.ConcurrencyTests$MyRecursiveTask"/></lhs><lhs name\="hacker.crackingcodinginterview.ConnectedGrid$Vertex"><rhs name\="hacker.crackingcodinginterview.ConnectedGrid$Vertex"/></lhs><lhs name\="hacker.crackingcodinginterview.BFSSearch$Edge"><rhs name\="hacker.crackingcodinginterview.BFSSearch$Edge"/></lhs><lhs name\="java.util.Set"><rhs name\="java.util.LinkedHashSet"/><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.AbstractSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.util.HashSet"><rhs name\="java.util.HashSet"/></lhs><lhs name\="com.data.node.Node"><rhs name\="com.data.node.DNode"/><rhs name\="com.data.node.Node"/></lhs><lhs name\="pet.Trie$TrieNode"><rhs name\="pet.Trie$TrieNode"/></lhs><lhs name\="java.util.concurrent.locks.Lock"><rhs name\="java.util.concurrent.locks.ReentrantLock"/></lhs><lhs name\="test.cloneable.TestWithoutCloneable"><rhs name\="test.cloneable.TestWithoutCloneable"/></lhs><lhs name\="test.cloneable.CloneableTest"><rhs name\="test.cloneable.CloneableTest"/></lhs><lhs name\="java.util.concurrent.ConcurrentMap"><rhs name\="java.util.concurrent.ConcurrentHashMap"/></lhs><lhs name\="java.util.Map"><rhs name\="java.util.concurrent.ConcurrentHashMap"/></lhs><lhs name\="java.util.concurrent.ConcurrentHashMap"><rhs name\="java.util.concurrent.ConcurrentHashMap"/></lhs><lhs name\="java.util.Collection"><rhs name\="java.util.HashSet"/></lhs><lhs name\="java.lang.Iterable"><rhs name\="java.util.HashSet"/></lhs></history>
content_assist_number_of_computers=19
content_assist_proposals_background=255,255,255
content_assist_proposals_foreground=0,0,0
eclipse.preferences.version=1
fontPropagated=true
org.eclipse.jdt.internal.ui.navigator.layout=2
org.eclipse.jdt.internal.ui.navigator.librariesnode=true
org.eclipse.jdt.ui.editor.tab.width=
org.eclipse.jdt.ui.formatterprofiles.version=13
org.eclipse.jdt.ui.javadoclocations.migrated=true
org.eclipse.jdt.ui.text.code_templates_migrated=true
org.eclipse.jdt.ui.text.custom_code_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.custom_templates=<?xml version\="1.0" encoding\="UTF-8" standalone\="no"?><templates/>
org.eclipse.jdt.ui.text.templates_migrated=true
org.eclipse.jface.textfont=1|Consolas|10.0|0|WINDOWS|1|0|0|0|0|0|0|0|0|1|0|0|0|0|Consolas;
proposalOrderMigrated=true
spelling_locale_initialized=true
tabWidthPropagated=true
useAnnotationsPrefPage=true
useQuickDiffPrefPage=true
