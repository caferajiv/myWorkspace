<?xml version="1.0" encoding="UTF-8"?>
<session version="1.0">&#x0A;<refactoring comment="Rename package &apos;com.rajiv.loadcontrol.util.sensors&apos; to &apos;com.rajiv.loadcontrol.sensors&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.util.sensors&apos;&#x0D;&#x0A;- Renamed element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.sensors&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;com.rajiv.loadcontrol.util.sensors&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;com.rajiv.loadcontrol.util.sensors" name="com.rajiv.loadcontrol.sensors" qualified="false" references="true" stamp="1349169813671" textual="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.sensors.impl&apos;" description="Delete element" element1="/src&lt;com.rajiv.loadcontrol.sensors.impl" element2="/src&lt;com.rajiv.loadcontrol.sensors" element3="/src&lt;com.rajiv.loadcontrol" element4="/src&lt;com.rajiv" element5="/src&lt;com" elements="5" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1349169851484" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Move element &apos;OverloadConstants.java&apos; to &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.constants&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Destination element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.constants&apos;&#x0D;&#x0A;- Original element: &apos;com.rajiv.loadcontrol.OverloadConstants.java&apos;&#x0D;&#x0A;- Update references to refactored element" description="Move compilation unit" destination="/src&lt;com.rajiv.loadcontrol.constants" element1="/src&lt;com.rajiv.loadcontrol{OverloadConstants.java" files="0" flags="589830" folders="0" id="org.eclipse.jdt.ui.move" patterns="*" policy="org.eclipse.jdt.ui.moveResources" qualified="false" references="true" stamp="1349170256031" units="1" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.task.FutureWrapper.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol.task{FutureWrapper.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349170770734" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349171827031" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349171835953" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172079046" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172093781" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172101640" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172124171" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172224890" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172236921" version="1.0"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349172241015" version="1.0"/>&#x0A;<refactoring comment="Rename compilation unit &apos;com.rajiv.loadcontrol.observers.IResourceStatusObserver.java&apos; to &apos;IResourceOverloadObserver.java&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;com.rajiv.loadcontrol.observers.IResourceStatusObserver.java&apos;&#x0D;&#x0A;- Renamed element: &apos;com.rajiv.loadcontrol.observers.IResourceOverloadObserver.java&apos;" description="Rename compilation unit &apos;IResourceStatusObserver.java&apos;" flags="2" id="org.eclipse.jdt.ui.rename.compilationunit" input="/src&lt;com.rajiv.loadcontrol.observers{IResourceStatusObserver.java" name="IResourceOverloadObserver.java" references="false" stamp="1349172795078" version="1.0"/>&#x0A;<refactoring comment="Rename package &apos;com.rajiv.loadcontrol.events&apos; to &apos;com.rajiv.loadcontrol.events.vo&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.events&apos;&#x0D;&#x0A;- Renamed element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.events.vo&apos;&#x0D;&#x0A;- Update references to refactored element&#x0D;&#x0A;- Update textual occurrences in comments and strings" description="Rename package &apos;com.rajiv.loadcontrol.events&apos;" flags="589830" hierarchical="false" id="org.eclipse.jdt.ui.rename.package" input="/src&lt;com.rajiv.loadcontrol.events" name="com.rajiv.loadcontrol.events.vo" qualified="false" references="true" stamp="1349500524328" textual="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.events&apos;" description="Delete element" element1="/src&lt;com.rajiv.loadcontrol.events" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1349500534640" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.events&apos;" description="Delete element" element1="/src&lt;com.rajiv.loadcontrol.events" elements="1" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1349500540515" subPackages="false" version="1.0"/>&#x0A;<refactoring accessors="true" comment="Delete element from project &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;OverloadControl_Framework/src/com.rajiv.loadcontrol.events.vo&apos;" description="Delete element" element1="/src&lt;com.rajiv.loadcontrol.events.vo" element2="/src&lt;com.rajiv.loadcontrol.events" elements="2" flags="589830" id="org.eclipse.jdt.ui.delete" resources="0" stamp="1349500551203" subPackages="false" version="1.0"/>&#x0A;<refactoring comment="Encapsulate field &apos;com.rajiv.loadcontrol.MyThreadPoolExecutor.canTaskExecute&apos; in &apos;com.rajiv.loadcontrol.MyThreadPoolExecutor&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;com.rajiv.loadcontrol.MyThreadPoolExecutor.canTaskExecute&apos;&#x0D;&#x0A;- Getter method name: &apos;isCanTaskExecute&apos;&#x0D;&#x0A;- Setter method name: &apos;setCanTaskExecute&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type&#x0D;&#x0A;- Generate method comments" comments="true" declaring="true" description="Encapsulate field &apos;canTaskExecute&apos;" flags="589830" getter="isCanTaskExecute" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;com.rajiv.loadcontrol{MyThreadPoolExecutor.java[MyThreadPoolExecutor^canTaskExecute" insertion="6" setter="setCanTaskExecute" stamp="1349502071484" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;com.rajiv.loadcontrol.task.InterruptableTaskWrapper.task&apos; in &apos;com.rajiv.loadcontrol.task.InterruptableTaskWrapper&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;com.rajiv.loadcontrol.task.InterruptableTaskWrapper.task&apos;&#x0D;&#x0A;- Getter method name: &apos;getTask&apos;&#x0D;&#x0A;- Setter method name: &apos;setTask&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type&#x0D;&#x0A;- Generate method comments" comments="true" declaring="true" description="Encapsulate field &apos;task&apos;" flags="589830" getter="getTask" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;com.rajiv.loadcontrol.task{InterruptableTaskWrapper.java[InterruptableTaskWrapper^task" insertion="5" setter="setTask" stamp="1349509516671" version="1.0" visibility="1"/>&#x0A;<refactoring comment="Encapsulate field &apos;com.rajiv.loadcontrol.task.AbstractInterruptableTask.timeOfSubmit&apos; in &apos;com.rajiv.loadcontrol.task.AbstractInterruptableTask&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original element: &apos;com.rajiv.loadcontrol.task.AbstractInterruptableTask.timeOfSubmit&apos;&#x0D;&#x0A;- Getter method name: &apos;getTimeOfSubmit&apos;&#x0D;&#x0A;- Setter method name: &apos;setTimeOfSubmit&apos;&#x0D;&#x0A;- Field visibility: &apos;public&apos;&#x0D;&#x0A;- Use getter and setter methods in declaring type&#x0D;&#x0A;- Generate method comments" comments="true" declaring="true" description="Encapsulate field &apos;timeOfSubmit&apos;" flags="589830" getter="getTimeOfSubmit" id="org.eclipse.jdt.ui.self.encapsulate" input="/src&lt;com.rajiv.loadcontrol.task{AbstractInterruptableTask.java[AbstractInterruptableTask^timeOfSubmit" insertion="3" setter="setTimeOfSubmit" stamp="1349510582859" version="1.0" visibility="1"/>&#x0A;<refactoring clone="true" comment="Infer generic type arguments on &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original project: &apos;OverloadControl_Framework&apos;&#x0D;&#x0A;- Original elements:&#x0D;&#x0A;     com.rajiv.loadcontrol.LoadController.java&#x0D;&#x0A;- Assume clone() returns an instance of the receiver type&#x0D;&#x0A;- Leave unconstrained type arguments raw" description="Infer generic type arguments" element1="/src&lt;com.rajiv.loadcontrol{LoadController.java" flags="6" id="org.eclipse.jdt.ui.infer.typearguments" leave="true" stamp="1349513062812" version="1.0"/>
</session>