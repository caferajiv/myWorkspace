package com.data.test;

import com.data.node.TNode;
import com.data.tree.BinarySearchTree;

public class PreorderToPostorderTree {
	
	public static int[] preOrderArray={6,3,2,4,5,9,10,23,13};
	private static TNode tnode= new TNode();
	private static BinarySearchTree tree= new BinarySearchTree(tnode);
	
	
	
	public static void main(String[] args) {
		int low=0;
		int high=preOrderArray.length-1;
		tnode.setData(preOrderArray[low]);
		tnode.setLeftChild(null);
		tnode.setRightChild(null);
		makeTree(tnode,low, high);
		tree.inOrderTraversal();
	}



	private static void makeTree(TNode root, int low, int high) {
		for(int i = low+1 ; i<=high;i++ )
		{
			if(preOrderArray[i]>=root.getData())
			{
				TNode leftChild=new TNode();
				leftChild.setData(preOrderArray[low+1]);
				TNode rightChild=new TNode();
				rightChild.setData(preOrderArray[i]);
				root.setLeftChild(leftChild);
				root.setRightChild(rightChild);
				makeTree(leftChild, low, i-1);
				makeTree(rightChild, i, high);
			}
		}
		
	}

}
